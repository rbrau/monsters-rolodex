{"ast":null,"code":"var _jsxFileName = \"/Users/rubenbrau/monsters-rolodex/src/App.js\";\nimport { Component } from 'react';\nimport './App.css';\n\n// COMPONENT\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [] //Empty array of values as STATE, then we populate\n    };\n\n    console.log('1');\n  }\n\n  // <LIFE_CYCLE_COMPONENTS>\n  //_______________________________________________________\n  // API requests we place here so our components receive the data they need\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState(() => {\n      return {\n        monsters: users\n      };\n    }, () => {\n      console.log(this.state);\n    }));\n    console.log('3');\n  }\n  //_______________________________________________________\n  // </LIFE_CYCLE_COMPONENTS>\n\n  render() {\n    console.log('2');\n    return (\n      /*#__PURE__*/\n      //-----------------------------------\n      _jsxDEV(\"div\", {\n        className: \"App\",\n        children: this.state.monsters.map(monster => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: monster.name\n          }, monster.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n      //-----------------------------------\n    );\n  }\n}\n\nexport default App;","map":{"version":3,"names":["Component","App","constructor","state","monsters","console","log","componentDidMount","fetch","then","response","json","users","setState","render","map","monster","name","id"],"sources":["/Users/rubenbrau/monsters-rolodex/src/App.js"],"sourcesContent":["import { Component } from 'react';\nimport './App.css';\n\n// COMPONENT\nclass App extends Component{\n\n\n\n  constructor(){\n    super();\n    this.state={\n      monsters: [] //Empty array of values as STATE, then we populate\n  };\n  console.log('1')\n  }\n\n\n\n  // <LIFE_CYCLE_COMPONENTS>\n  //_______________________________________________________\n  // API requests we place here so our components receive the data they need\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then((response) => response.json())\n    .then((users)=>\n      this.setState(\n        ()=>{return{monsters: users}},\n        ()=>{console.log(this.state)}\n      ))\n      console.log('3')\n  }\n  //_______________________________________________________\n  // </LIFE_CYCLE_COMPONENTS>\n\n\n\n  render (){\n    console.log('2')\n    return(\n      //-----------------------------------\n        <div className=\"App\">\n          {\n            this.state.monsters.map((monster)=>{\n              return <div key={monster.id}>{monster.name}</div>\n            })\n          }\n        </div>        \n      //-----------------------------------\n    );\n\n  }\n}\n\nexport default App"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,WAAW;;AAElB;AAAA;AACA,MAAMC,GAAG,SAASD,SAAS;EAIzBE,WAAW,GAAE;IACX,KAAK,EAAE;IACP,IAAI,CAACC,KAAK,GAAC;MACTC,QAAQ,EAAE,EAAE,CAAC;IACjB,CAAC;;IACDC,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;EAChB;;EAIA;EACA;EACA;EACAC,iBAAiB,GAAE;IACjBC,KAAK,CAAC,4CAA4C,CAAC,CAClDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,KAAK,IACV,IAAI,CAACC,QAAQ,CACX,MAAI;MAAC,OAAM;QAACT,QAAQ,EAAEQ;MAAK,CAAC;IAAA,CAAC,EAC7B,MAAI;MAACP,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,KAAK,CAAC;IAAA,CAAC,CAC9B,CAAC;IACFE,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;EACpB;EACA;EACA;;EAIAQ,MAAM,GAAG;IACPT,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAChB;MAAA;MACE;MACE;QAAK,SAAS,EAAC,KAAK;QAAA,UAEhB,IAAI,CAACH,KAAK,CAACC,QAAQ,CAACW,GAAG,CAAEC,OAAO,IAAG;UACjC,oBAAO;YAAA,UAAuBA,OAAO,CAACC;UAAI,GAAzBD,OAAO,CAACE,EAAE;YAAA;YAAA;YAAA;UAAA,QAAsB;QACnD,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA;MAGR;IAAA;EAGJ;AACF;;AAEA,eAAejB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}