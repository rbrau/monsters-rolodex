{"ast":null,"code":"var _jsxFileName = \"/Users/rubenbrau/monsters-rolodex/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  //[value, setvalue]=useState(initialValue)\n  const [searchField, setSearchField] = useState('');\n  console.log({\n    searchField\n  });\n  const [title, setTitle] = useState([]);\n  const [monsters, setMonsters] = useState([]);\n  const [filteredMonsters, SetFilteredMonsters] = useState(monsters);\n\n  //({call-back-function, effect we want}, [dependencies,state values or props, if they changes I activate the function])\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => setMonsters(users));\n  }, []); //Empty dependency --> \"use function only once when it mounts\"\n\n  useEffect(() => {\n    const newFilteredMonsters = monsters.filter(monster => {\n      return monster.name.toLocaleLowerCase().includes(searchField);\n    });\n    SetFilteredMonsters(newFilteredMonsters);\n  }, [monsters, searchField]);\n  const onSearchChange = event => {\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setSearchField(searchFieldString);\n  };\n  const onTitleChange = event => {\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setTitle(searchFieldString);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      onChangeHandler: onSearchChange,\n      placeHolder: 'search monsters',\n      className: 'monsters-search-box'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      onChangeHandler: onTitleChange,\n      placeHolder: 'set title',\n      className: 'title-search-box'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      monsters: filteredMonsters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"I5ma07U6NIoiNcr7P+dWuQ4fa7Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","CardList","SearchBox","App","searchField","setSearchField","console","log","title","setTitle","monsters","setMonsters","filteredMonsters","SetFilteredMonsters","fetch","then","response","json","users","newFilteredMonsters","filter","monster","name","toLocaleLowerCase","includes","onSearchChange","event","searchFieldString","target","value","onTitleChange"],"sources":["/Users/rubenbrau/monsters-rolodex/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nimport './App.css';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\n\nconst App = () => {\n\t//[value, setvalue]=useState(initialValue)\n\tconst [searchField, setSearchField] = useState('');\n\tconsole.log({ searchField });\n\tconst [title, setTitle] = useState([]);\n\tconst [monsters, setMonsters] = useState([]);\n\tconst [filteredMonsters, SetFilteredMonsters] = useState(monsters);\n\n\t//({call-back-function, effect we want}, [dependencies,state values or props, if they changes I activate the function])\n\tuseEffect(() => {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then((response) => response.json())\n\t\t\t.then((users) => setMonsters(users));\n\t}, []); //Empty dependency --> \"use function only once when it mounts\"\n\n\tuseEffect(() => {\n\t\tconst newFilteredMonsters = monsters.filter((monster) => {\n\t\t\treturn monster.name.toLocaleLowerCase().includes(searchField);\n\t\t});\n\n\t\tSetFilteredMonsters(newFilteredMonsters);\n\t}, [monsters, searchField]);\n\n\tconst onSearchChange = (event) => {\n\t\tconst searchFieldString = event.target.value.toLocaleLowerCase();\n\t\tsetSearchField(searchFieldString);\n\t};\n\tconst onTitleChange = (event) => {\n\t\tconst searchFieldString = event.target.value.toLocaleLowerCase();\n\t\tsetTitle(searchFieldString);\n\t};\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<h1 className='app-title'>{title}</h1>\n\n\t\t\t<SearchBox\n\t\t\t\tonChangeHandler={onSearchChange}\n\t\t\t\tplaceHolder={'search monsters'}\n\t\t\t\tclassName={'monsters-search-box'}\n\t\t\t/>\n\t\t\t<br />\n\t\t\t<SearchBox\n\t\t\t\tonChangeHandler={onTitleChange}\n\t\t\t\tplaceHolder={'set title'}\n\t\t\t\tclassName={'title-search-box'}\n\t\t\t/>\n\n\t\t\t<CardList monsters={filteredMonsters} />\n\t\t</div>\n\t);\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,4CAA4C;AACjE,OAAOC,SAAS,MAAM,8CAA8C;AAAC;AAErE,MAAMC,GAAG,GAAG,MAAM;EAAA;EACjB;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClDO,OAAO,CAACC,GAAG,CAAC;IAAEH;EAAY,CAAC,CAAC;EAC5B,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAACW,QAAQ,CAAC;;EAElE;EACAV,SAAS,CAAC,MAAM;IACfc,KAAK,CAAC,4CAA4C,CAAC,CACjDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,KAAK,IAAKP,WAAW,CAACO,KAAK,CAAC,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERlB,SAAS,CAAC,MAAM;IACf,MAAMmB,mBAAmB,GAAGT,QAAQ,CAACU,MAAM,CAAEC,OAAO,IAAK;MACxD,OAAOA,OAAO,CAACC,IAAI,CAACC,iBAAiB,EAAE,CAACC,QAAQ,CAACpB,WAAW,CAAC;IAC9D,CAAC,CAAC;IAEFS,mBAAmB,CAACM,mBAAmB,CAAC;EACzC,CAAC,EAAE,CAACT,QAAQ,EAAEN,WAAW,CAAC,CAAC;EAE3B,MAAMqB,cAAc,GAAIC,KAAK,IAAK;IACjC,MAAMC,iBAAiB,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACN,iBAAiB,EAAE;IAChElB,cAAc,CAACsB,iBAAiB,CAAC;EAClC,CAAC;EACD,MAAMG,aAAa,GAAIJ,KAAK,IAAK;IAChC,MAAMC,iBAAiB,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACN,iBAAiB,EAAE;IAChEd,QAAQ,CAACkB,iBAAiB,CAAC;EAC5B,CAAC;EAED,oBACC;IAAK,SAAS,EAAC,KAAK;IAAA,wBACnB;MAAI,SAAS,EAAC,WAAW;MAAA,UAAEnB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eAEtC,QAAC,SAAS;MACT,eAAe,EAAEiB,cAAe;MAChC,WAAW,EAAE,iBAAkB;MAC/B,SAAS,EAAE;IAAsB;MAAA;MAAA;MAAA;IAAA,QAChC,eACF;MAAA;MAAA;MAAA;IAAA,QAAM,eACN,QAAC,SAAS;MACT,eAAe,EAAEK,aAAc;MAC/B,WAAW,EAAE,WAAY;MACzB,SAAS,EAAE;IAAmB;MAAA;MAAA;MAAA;IAAA,QAC7B,eAEF,QAAC,QAAQ;MAAC,QAAQ,EAAElB;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACnC;AAER,CAAC;AAAC,GAnDIT,GAAG;AAAA,KAAHA,GAAG;AAqDT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}